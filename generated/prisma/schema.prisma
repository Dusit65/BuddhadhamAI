generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model user_tb {
  userId       BigInt   @id @default(autoincrement())
  userName     String   @db.VarChar(100)
  userEmail    String   @db.VarChar(50)
  userPassword String   @db.VarChar(50)
  createAt     DateTime @default(now())

  chats chat_tb[]
}

model chat_tb {
  chatId     BigInt   @id @default(autoincrement())
  userId     BigInt
  chatHeader String   @db.NVarChar(50)
  createAt   DateTime @default(now())

  user user_tb  @relation(fields: [userId], references: [userId])
  qnas qNa_tb[]
}

model qNa_tb {
  qNaId     BigInt   @id @default(autoincrement())
  chatId    BigInt
  qNaWords  String   @db.NVarChar(MAX)
  qNaType   String   @db.Char(1)
  createdAt DateTime @default(now())

  chat chat_tb @relation(fields: [chatId], references: [chatId])
}

model book_tb {
  bookId    BigInt       @id @default(autoincrement())
  bookName  String       @db.NVarChar(MAX)
  chapters  chapter_tb[]
  createdAt DateTime     @default(now())
  updatedAt DateTime     @default(now()) @updatedAt
}

model chapter_tb {
  chapterId   BigInt   @id @default(autoincrement())
  bookId      BigInt
  chapterName String   @db.NVarChar(50)
  chapterText String   @db.NVarChar(MAX)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt

  book book_tb @relation(fields: [bookId], references: [bookId])
}

model embeddings_tb {
  id         BigInt   @id @default(autoincrement())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  embeddings Bytes // เก็บ numpy array เป็น binary
  metadata   Bytes // เก็บ pickle docs
}

model log_tb {
  id        BigInt   @id @default(autoincrement())
  createdAt DateTime @default(now())
  message   String   @db.NVarChar(MAX)
}
